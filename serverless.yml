service: retaily

package:
  patterns:
    - "!client/**"
    - "!node_modules/**"
    - "!server/**"
    - "server/node_modules/**"
    - "server/dist/**"
    - "server/prisma/**"
    - "server/.env"
    - "!.gitignore"
    - "!.nvmrc"
    - "!package-lock.json"
    - "!package.json"
    - "!README.MD"

frameworkVersion: "3"

plugins:
  - serverless-offline
  - serverless-s3-sync

provider:
  name: aws
  region: us-west-2
  runtime: nodejs16.x
  tags:
    project: retaily

custom:
  project: retaily
  dnsClient: www.retaily.com.br
  s3Sync:
    - bucketName: ${self:custom.dnsClient}
      localDir: client/build

functions:
  monolithServer:
    handler: server/dist/lambda.handler
    events:
      - httpApi: "*"
    memorySize: 1024
    timeout: 10
    environment:
      NODE_ENV: ${sls:stage}

resources:
  Resources:
    clientBucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.dnsClient}
        WebsiteConfiguration:
          IndexDocument: index.html
        Tags:
          - Key: project
            Value: ${self:custom.project}
    clientBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: clientBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join:
                  ["", ["arn:aws:s3:::", { "Ref": "clientBucket" }, "/*"]]
